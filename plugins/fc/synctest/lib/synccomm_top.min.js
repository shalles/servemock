(function(window){window.__synctest={}; var wsServer='ws://localhost:8080';var websocket=new WebSocket(wsServer);websocket.onopen=function(evt){console.log('[synctest start success]');};websocket.onclose=function(evt){console.log('[synctest closed please refresh this page]');};websocket.onerror=function(evt){console.log('[synctest error please refresh this page]');}; websocket.onmessage=function(evt){ excuteCommand(parseCommand(evt.data));};function validateFn(fn){return typeof fn==='function';}
function Callbacks(options){this.list=[]}
Callbacks.prototype={ add:function(fn){if(validateFn(fn)){this.list.push(fn);}else if(Object.prototype.toString.call(fn)==="[object Array]"){for(var i=0,len=fn.length;i<len;i++){arguments.callee.call(this,fn[i]);}}
return this;}, fireWith:function(context,args){var list=this.list;for(var i=0,len;i<list.length;i++){list[i].apply(context,args.slice?args.slice():args);}
return this;}, fire:function(){this.fireWith(this,arguments);return this;}};var eventData={},eventID=0,eventDomID='synccommand_'+new Date().getTime(); function parseCommand(command){command=JSON.parse(command);var selector=command.selector
ele=selector==='window'?window:document.querySelectorAll(selector),listeners=eventData[ele[eventDomID]][command.type];return{ele:ele,listeners:listeners}} 
function buildCommand(self,e){var ele=self,selector=ele===window?'window':(ele.tagName+"#"+ele.id+((ele.classList&&ele.classList.length)?"."+
ele.classList.toString().split(' ').join('.'):''));var command=JSON.stringify({selector:selector,evtType:e.type});return command;} 
function sendCommand(command){websocket.send(command);} 
function excuteCommand(command){var listeners=command.listeners;listeners.fire();}
var originAddEventListener=EventTarget.prototype.addEventListener;window.addEventListener=EventTarget.prototype.addEventListener=function(type,listener,useCapture){var callback=function(e){var self=this;((eventData[eventID]||(eventData[eventID]={}))[type]||(eventData[eventID][type]=new Callbacks())).add(function(){ listener.call(self,e);});self[eventDomID]||(self[eventDomID]=++eventID); sendCommand(buildCommand(this,e)); listener.call(this,e);}
originAddEventListener.call(this,type,callback,useCapture);} 
window.__synctest.regriteDefaultEventListener=function(target,evt){target.addEventListener(evt,function(e){console.log(evt,e);},false)}
window.__synctest.regriteDefaultEventListenerTargetList=function(tgtList,evt){for(var i=0,len=tgtList.length;i<len;i++){window.__synctest.regriteDefaultEventListener(tgtList[i],evt);}}
window.__synctest.regriteDefaultEventListenerEventList=function(target,evtList){for(var i=0,len=evtList.length;i<len;i++){window.__synctest.regriteDefaultEventListener(target,evtList[i]);}}
window.__synctest.regriteDefaultEventListenerList=function(tgtList,evtList){for(var i=0,len=tgtList.length;i<len;i++){window.__synctest.regriteDefaultEventListenerEventList(tgtList[i],evtList);}}})(window);
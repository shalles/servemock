(function(window){window.__synctest={};var wsServer='ws://localhost:8080',websocket=new WebSocket(wsServer);websocket.onopen=function(evt){initDefaultEvent();console.log('[synctest start success]');};websocket.onclose=function(evt){console.log('[synctest closed please check the server or refresh this page]');};websocket.onmessage=function(evt){excuteCommand(parseCommand(evt.data));};websocket.onerror=function(evt){console.log('[synctest closed please check the server or refresh this page]');};function validateFn(fn){return typeof fn==='function';}
function Callbacks(options){this.list=[]}
Callbacks.prototype={ add:function(fn){if(validateFn(fn)){this.list.push(fn);}else if(Object.prototype.toString.call(fn)==="[object Array]"){for(var i=0,len=fn.length;i<len;i++){arguments.callee.call(this,fn[i]);}}
return this;}, fireWith:function(context,args){var list=this.list;for(var i=0,len;i<list.length;i++){list[i].apply(context,args.slice?args.slice():args);}
return this;}, fire:function(){this.fireWith(this,arguments);return this;}};function inArray(a,arr){return arr.indexOf(a)>-1;}
function inList(item,list){for(var i in list){if(inArray(item.ele,list[i].ele)&&inArray(item.type,list[i].type)){return true;}}
return false;}
var eventData={},eventID=0,eventDomID='synccommand_'+new Date().getTime(),notSendList=[{ele:['window','document'],type:['DOMContentLoaded','load']}]; function parseCommand(command){command=JSON.parse(command);var selector=command.selector,ele,listeners;if(inList({ele:selector,type:command.type},notSendList))return{};ele=selector==='window'?window:document.querySelector(selector); listeners=eventData[ele[eventDomID]][command.type]; switch(command.type){case'input':ele.value=command.value;break;case'focus':ele.focus();break;case'scroll':ele.scrollTop?(ele.scrollTop=command.scrollTop,ele.scrollLeft=command.scrollLeft):window.scrollTo(command.scrollLeft,command.scrollTop);break;case'click':if(ele.tagName&&ele.tagName.toLowerCase()==="a"){ele.href.indexOf("javascript")===-1&&(location.href=ele.href);}
break;default:break;}
return{ele:ele,listeners:listeners}} 
function buildCommand(self,e){var ele=self, selector=(ele===window)?'window':(ele===window.document)?'document':(ele.tagName+(ele.id?"#"+ele.id:"")+
((ele.classList&&ele.classList.length)?"."+ele.classList.toString().split(' ').join('.'):''));var command={selector:selector,type:e.type}; switch(e.type){case'input':command.value=ele.value;break;case'scroll':command.scrollTop=ele.scrollTop||scrollY;command.scrollLeft=ele.scrollLeft||scrollX;break;default:break;}
console.log(command);return JSON.stringify(command);} 
function sendCommand(command){(websocket.readyState===1)&&websocket.send(command);} 
function excuteCommand(command){command.listeners&&command.listeners.fire();}
var originAddEventListener=EventTarget.prototype.addEventListener;window.addEventListener=EventTarget.prototype.addEventListener=function(type,listener,useCapture){var self=this; self[eventDomID]||(self[eventDomID]=++eventID);((eventData[eventID]||(eventData[eventID]={}))[type]||(eventData[eventID][type]=new Callbacks())).add(function(){ listener.call(self,window.event);});var callback=function(e){ sendCommand(buildCommand(this,e)); listener.call(this,e);}
originAddEventListener.call(self,type,callback,useCapture);} 
function rewriteDefaultEventListener(target,evt){target.addEventListener(evt,function(e){console.log(evt,e);},false)}
function rewriteDefaultEventListenerTargetList(tgtList,evt){for(var i=0,len=tgtList.length;i<len;i++){rewriteDefaultEventListener(tgtList[i],evt);}}
function rewriteDefaultEventListenerEventList(target,evtList){for(var i=0,len=evtList.length;i<len;i++){rewriteDefaultEventListener(target,evtList[i]);}}
function rewriteDefaultEventListenerList(tgtList,evtList){for(var i=0,len=tgtList.length;i<len;i++){rewriteDefaultEventListenerEventList(tgtList[i],evtList);}}
function initDefaultEvent(){rewriteDefaultEventListenerEventList(window,['scroll','resize']); var linkList=document.querySelectorAll('a');linkList.length&&rewriteDefaultEventListenerTargetList(linkList,'click'); var inputs=document.querySelectorAll('input'),textarea=document.querySelectorAll('textarea');inputs.length&&rewriteDefaultEventListenerList(inputs,['input','focus']);textarea.length&&rewriteDefaultEventListenerList(textarea,['input','focus']);}})(window);
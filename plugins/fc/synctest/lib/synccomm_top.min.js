(function(window){window.__synctest={};var wsServer='ws://localhost:8080',websocket=new WebSocket(wsServer);websocket.onopen=function(evt){initDefaultEvent();console.log('[synctest start success]');};websocket.onclose=function(evt){console.log('[synctest closed please check the server or refresh this page]');};websocket.onmessage=function(evt){excuteCommand(parseCommand(evt.data));};websocket.onerror=function(evt){console.log('[synctest closed please check the server or refresh this page]');};function validateFn(fn){return typeof fn==='function';}
function Callbacks(options){this.list=[]}
Callbacks.prototype={ add:function(fn){if(validateFn(fn)){this.list.push(fn);}else if(Object.prototype.toString.call(fn)==="[object Array]"){for(var i=0,len=fn.length;i<len;i++){arguments.callee.call(this,fn[i]);}}
return this;}, fireWith:function(context,args){var list=this.list;for(var i=0,len;i<list.length;i++){list[i].apply(context,args.slice?args.slice():args);}
return this;}, fire:function(){this.fireWith(this,arguments);return this;}};var eventData={},eventID=0,eventDomID='synccommand_'+new Date().getTime(); parseCommand=function(command){command=JSON.parse(command);var selector=command.selector
ele=selector==='window'?window:document.querySelectorAll(selector),listeners=eventData[ele[eventDomID]][command.type];return{ele:ele,listeners:listeners}} 
buildCommand=function(self,e){var ele=self,selector=(ele===window||ele===window.document)?'window':(ele.tagName+"#"+ele.id+((ele.classList&&ele.classList.length)?"."+
ele.classList.toString().split(' ').join('.'):''));var command=JSON.stringify({selector:selector,type:e.type});return command;} 
sendCommand=function(command){(websocket.readyState===1)&&websocket.send(command);} 
excuteCommand=function(command){command.listeners.fire();}
var originAddEventListener=EventTarget.prototype.addEventListener;window.addEventListener=EventTarget.prototype.addEventListener=function(type,listener,useCapture){var callback=function(e){var self=this;((eventData[eventID]||(eventData[eventID]={}))[type]||(eventData[eventID][type]=new Callbacks())).add(function(){ listener.call(self,e);});self[eventDomID]||(self[eventDomID]=++eventID); sendCommand(buildCommand(this,e)); listener.call(this,e);}
originAddEventListener.call(this,type,callback,useCapture);} 
regriteDefaultEventListener=function(target,evt){target.addEventListener(evt,function(e){console.log(evt,e);},false)}
regriteDefaultEventListenerTargetList=function(tgtList,evt){for(var i=0,len=tgtList.length;i<len;i++){regriteDefaultEventListener(tgtList[i],evt);}}
regriteDefaultEventListenerEventList=function(target,evtList){for(var i=0,len=evtList.length;i<len;i++){regriteDefaultEventListener(target,evtList[i]);}}
regriteDefaultEventListenerList=function(tgtList,evtList){for(var i=0,len=tgtList.length;i<len;i++){regriteDefaultEventListenerEventList(tgtList[i],evtList);}}
initDefaultEvent=function(){regriteDefaultEventListenerEventList(window,['scroll','resize']); var linkList=document.querySelectorAll('a');linkList.length&&regriteDefaultEventListenerTargetList(linkList,'click'); var inputs=document.querySelectorAll('input'),textarea=document.querySelectorAll('textarea');inputs.length&&regriteDefaultEventListenerList(inputs,['input','focus']);textarea.length&&regriteDefaultEventListenerList(textarea,['input','focus']);}})(window);